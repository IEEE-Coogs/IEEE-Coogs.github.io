name: Regenerate PAT

on:
  schedule:
    - cron: '0 2 * * 0' # Run at 2 AM UTC on Sundays

jobs:
  regenerate-token:
    runs-on: ubuntu-latest

    steps:
      - name: Check and regenerate PAT
        id: regenerate
        env:
          GITHUB_ACTOR: jacquelinesancheza
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          # Function to check PAT expiration
          check_pat_expiration() {
              local token_info
              token_info=$(curl -s -X GET -u $GITHUB_ACTOR:$PAT_TOKEN https://api.github.com/user)

              # Example logic: Parse token expiration from token_info
              local expiration_date
              expiration_date=$(echo "$token_info" | jq -r '.expires_at')

              # Example: Calculate days remaining until expiration
              local now
              now=$(date +%s)
              local expire_epoch
              expire_epoch=$(date --date="$expiration_date" +%s)
              local days_remaining
              days_remaining=$(( ($expire_epoch - $now) / (60*60*24) ))

              # Example: Check if token is nearing expiration (less than 7 days)
              if [ $days_remaining -lt 7 ]; then
                  echo "Token expires soon. Regenerating..."
                  # Example: Implement token regeneration logic (replace with actual API call)
                  # curl -X POST -u $GITHUB_ACTOR:$PAT_TOKEN https://api.github.com/token/regenerate
              else
                  echo "Token is still valid."
              fi
          }

          # Call function to check PAT expiration
          check_pat_expiration

      - name: Use the regenerated token
        run: |
          # Example: Use the new token in your deployment or application
          echo "Token regenerated successfully"
